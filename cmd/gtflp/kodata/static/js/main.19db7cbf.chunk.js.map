{"version":3,"sources":["containers/Layout/topbar/Topbar.jsx","containers/Layout/index.jsx","containers/App/MainWrapper.jsx","containers/LogContainer/components/LogCard.jsx","containers/LogContainer/index.jsx","containers/App/Router.jsx","containers/App/App.jsx","serviceWorker.js","index.js"],"names":["Topbar","changeMobileSidebarVisibility","changeSidebarVisibility","className","to","withRouter","useState","isSidebarShown","setIsSidebarShown","isSidebarCollapsed","setIsSidebarCollapsed","layoutClass","classNames","layout","MainWrapper","children","JSONPrettyMon","require","LogCard","props","Col","md","Card","CardBody","messages","map","message","index","sr","search","podname","substring","lm","length","json","theme","LogContainer","setMessages","podNames","setPodNames","useEffect","window","addEventListener","event","preventDefault","console","log","axios","post","corsOptions","then","response","catch","error","returnValue","location","protocol","wsURL","document","host","sock","ReconnectingWebSocket","onopen","onclose","e","code","onmessage","t","JSON","parse","data","includes","pod","concat","close","Container","Row","wrappedRoutes","path","component","Router","App","isLoading","setIsLoading","isLoaded","setIsLoaded","setTimeout","fill","d","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.19db7cbf.chunk.js","sourcesContent":["// Copyright [2021] [Jeff Naef]\n\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n\n//     http://www.apache.org/licenses/LICENSE-2.0\n\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Topbar = ({ changeMobileSidebarVisibility, changeSidebarVisibility }) => (\n  <div className=\"topbar\">\n    <div className=\"topbar__wrapper\">\n      <div className=\"topbar__left\">\n        <Link className=\"topbar__logo\" to=\"/online_marketing_dashboard\" />\n      </div>\n      <div className=\"topbar__right\"></div>\n    </div>\n  </div>\n);\n\nTopbar.propTypes = {\n  changeMobileSidebarVisibility: PropTypes.func.isRequired,\n  changeSidebarVisibility: PropTypes.func.isRequired,\n};\n\nexport default Topbar;\n","// Copyright [2021] [Jeff Naef]\n\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n\n//     http://www.apache.org/licenses/LICENSE-2.0\n\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport classNames from \"classnames\";\nimport Topbar from \"./topbar/Topbar\";\n\nconst Layout = () => {\n  const [isSidebarShown, setIsSidebarShown] = useState(false);\n  const [isSidebarCollapsed, setIsSidebarCollapsed] = useState(false);\n  const layoutClass = classNames({\n    layout: true,\n    \"layout--collapse\": true,\n  });\n\n  const changeSidebarVisibility = () => {\n    setIsSidebarCollapsed(!isSidebarCollapsed);\n  };\n\n  const changeMobileSidebarVisibility = () => {\n    setIsSidebarShown(!isSidebarShown);\n  };\n\n  return (\n    <div className={layoutClass}>\n      <Topbar\n        changeMobileSidebarVisibility={changeMobileSidebarVisibility}\n        changeSidebarVisibility={changeSidebarVisibility}\n      />\n    </div>\n  );\n};\n\nexport default withRouter(Layout);\n","// Copyright [2021] [Jeff Naef]\n\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n\n//     http://www.apache.org/licenses/LICENSE-2.0\n\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MainWrapper = ({ children }) => (\n  <div className=\"theme-light\">\n    <div className=\"wrapper\">\n      {children}\n    </div>\n  </div>\n);\n\nMainWrapper.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default MainWrapper;\n","// Copyright [2021] [Jeff Naef]\n\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n\n//     http://www.apache.org/licenses/LICENSE-2.0\n\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport React, { useState, useEffect } from \"react\";\nimport JSONPretty from \"react-json-pretty\";\nimport { Card, CardBody, Col } from \"reactstrap\";\nvar JSONPrettyMon = require(\"react-json-pretty/dist/monikai\");\n\nfunction LogCard(props) {\n  return (\n    <Col md={12}>\n      <Card>\n        <CardBody>\n          <div>\n            {props.messages.map((message, index) => {\n              // search for the `:` we placed earlier\n              let sr = message.search(\":\");\n              // get the pod name\n              // check to see if the pod contains the name `gtflp`\n              let check = message.search(\"gtflp\");\n              if (check > -1) {\n                return;\n              }\n              let podname = message.substring(0, sr);\n              // get the log message\n              let lm = message.substring(sr + 1, message.length);\n              return (\n                <div key={index}>\n                  <h3 className=\"bold-text\">{podname}</h3>\n                  <JSONPretty json={lm} theme={JSONPrettyMon} />\n                </div>\n              );\n            })}\n          </div>\n        </CardBody>\n      </Card>\n    </Col>\n  );\n}\n\nexport default LogCard;\n","// Copyright [2021] [Jeff Naef]\n\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n\n//     http://www.apache.org/licenses/LICENSE-2.0\n\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport React, { useState, useEffect } from \"react\";\nimport {  Container, Row } from \"reactstrap\";\nimport LogCard from \"./components/LogCard\";\nimport axios from \"axios\";\nimport ReconnectingWebSocket from \"reconnecting-websocket\";\n\nfunction LogContainer() {\n  const [messages, setMessages] = useState([]);\n  const [podNames, setPodNames] = useState([]);\n\n  // this is not working\n  const onClose = () => {\n    console.log(\"CLOSING\");\n    axios\n      .post(\"/wsclose\", {}, corsOptions)\n      .then(function (response) {\n        console.log(response);\n      })\n      .catch(function (error) {\n        console.log(error);\n      });\n  };\n\n\n  useEffect(() => {\n    // this is not working\n    window.addEventListener(\"beforeunload\", (event) => {\n      // Cancel the event as stated by the standard.\n      event.preventDefault();\n      onClose();\n      // Chrome requires returnValue to be set.\n      event.returnValue = \"\";\n    });\n\n    console.log(\"Protocol: \" + window.location.protocol);\n    let wsURL = \"ws://\" + document.location.host + \"/ws\";\n\n    if (window.location.protocol === \"https:\") {\n      wsURL = \"wss://\" + document.location.host + \"/ws\";\n    }\n\n    console.log(\"WS URL: \" + wsURL);\n    let sock = new ReconnectingWebSocket(wsURL);\n    sock.onopen = function () {\n      console.log(\"connected to \" + wsURL);\n    };\n    sock.onclose = function (e) {\n      console.log(\"connection closed (\" + e.code + \")\");\n    };\n    // Where we get the messages from the server\n    sock.onmessage = function (e) {\n      let t = JSON.parse(e.data);\n      console.log(t);\n\n      if (podNames.includes(t.pod) == false) {\n        setPodNames(podNames.concat(t.pod));\n        console.log(podNames);\n      }\n\n      setMessages(messages.concat(t.pod + \" : \" + t.message));\n\n    };\n    return () => {\n      sock.close();\n    };\n  });\n\n  return (\n    <Container >\n      <h3 className=\"page-title\">Log Scanner:</h3>\n      <h5> Load new pod logs from running resources in the namespace </h5>\n      <Row>\n        {/* {podNames.map((podName) => {\n            if (podNames.length > 0) {\n            // location = podNames.indexOf(podName);\n            <LogCard messages={messages} podName={podName} podNames={podNames} />\n            }\n          })} */}\n        <LogCard messages={messages} podNames={podNames} />\n      </Row>\n    </Container>\n  );\n}\n\nexport default LogContainer;\n","// Copyright [2021] [Jeff Naef]\n\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n\n//     http://www.apache.org/licenses/LICENSE-2.0\n\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport Layout from \"../Layout/index\";\nimport MainWrapper from \"./MainWrapper\";\n\nimport LogContainer from \"../LogContainer\";\n\nconst wrappedRoutes = () => (\n  <div>\n    <Layout />\n    <div className=\"container__wrap\">\n      <Route path=\"/\" component={LogContainer} />\n    </div>\n  </div>\n);\n\nconst Router = () => (\n  <MainWrapper>\n    <main>\n      <Switch>\n        <Route path=\"/\" component={wrappedRoutes} />\n      </Switch>\n    </main>\n  </MainWrapper>\n);\n\nexport default Router;\n","// Copyright [2021] [Jeff Naef]\n\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n\n//     http://www.apache.org/licenses/LICENSE-2.0\n\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport React, { useEffect, useState } from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"../../scss/app.scss\";\nimport Router from \"./Router\";\n\nconst App = () => {\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    window.addEventListener(\"load\", () => {\n      setIsLoading(false);\n      setTimeout(() => setIsLoaded(true), 500);\n    });\n  }, []);\n\n  return (\n    <BrowserRouter>\n      {!isLoaded && (\n        <div className={`load${isLoading ? \"\" : \" loaded\"}`}>\n          <div className=\"load__icon-wrap\">\n            <svg className=\"load__icon\">\n              <path\n                fill=\"#4ce1b6\"\n                d=\"M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z\"\n              />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div>\n        <Router />\n      </div>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","/* eslint-disable no-console */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        // eslint-disable-next-line no-use-before-define\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        // eslint-disable-next-line no-use-before-define\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      // eslint-disable-next-line no-param-reassign\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","// Copyright [2021] [Jeff Naef]\n\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n\n//     http://www.apache.org/licenses/LICENSE-2.0\n\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}